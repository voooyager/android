创建mask图
byte[] maskData // mask图
Bitmap maskBitmap = Bitmap.createBitmap(width, height, ALPHA_8); //创建指定宽高的透明图片
maskBitmap.copyPixelsFromBuffer(ByteBuffer.wrap(maskData)); // mask图按像素读取到bitmap

实现图片缩放、旋转后绘制到view
// 定义源矩形（图片原始大小）
RectF srcRect = new RectF(0, 0, bitmap.getWidth(), bitmap.getHeight());
// 定义目标矩形（视图区域）
RectF dstRect = new RectF(0, 0, viewWidth, viewHeight);
// 创建 Matrix 并设置居中缩放
Matrix matrix = new Matrix();
matrix.setRectToRect(srcRect, dstRect, Matrix.ScaleToFit.CENTER);
matrix.postRotate(45, centerX, centerY); // 缩放后旋转
// 应用变换绘制图片
canvas.drawBitmap(bitmap, matrix, null);

实现图片基于mask抠图
// 定义源矩形（MASK图大小） eg. (0,0,864,648)
RectF srcRect = new RectF(0, 0, maskBitmap.getWidth(), maskBitmap.getHeight());
// 定义目标矩形（原图大小） eg. (0,0,864,648)
RectF dstRect = new RectF(0, 0, bitmap.getWidth(), bitmap.getHeight());
// 创建转换矩阵 Matrix 并设置顶点对齐
Matrix matrix = new Matrix();
matrix.setRectToRect(srcRect, dstRect, Matrix.ScaleToFit.START);
// 抠图外接矩形
RectF maskRect = new RectF(187,59,712,645)
// 定义转换后抠图外接矩形
RectF cropRect = new RectF()
// maskRect基于matrix转换，转换后为cropRect
matrix.mapRect(cropRect, maskRect)
// 创建抠图bitmap
Bitmap cropBitmap = Bitmap.createBitmap((int)cropRect.width(), (int)cropRect.height(), Config.ARGB_8888)

canvas.clipPath(cropPath) //通过路径（Path）定义画布可绘制区域,超出path区域不响应绘制

canvas.drawBitmap(bitmap, src, dst, paint) 是实现 位图裁剪与缩放绘制 的核心方法;从源位图（bitmap）中截取指定区域（src），自动缩放/平移至目标区域（dst）绘制



建议绘制不规则图形时开启抗锯齿功能
     Paint方法	          作用         	        常见搭配
setAntiAlias(true)	  抗锯齿（几何平滑）	     setStrokeWidth()
setDither(true)     	防抖动（色彩过渡优化）	 setColor()
setFilterBitmap(true)	位图滤波（缩放时平滑）	 drawBitmap()
